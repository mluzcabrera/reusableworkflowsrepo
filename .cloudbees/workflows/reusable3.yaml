apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: reusable
on:
  workflow_call:
    inputs:
      targetenv:
        type: string
      testvar:
        type: string        
    secrets:
      testsec:
        type: string

jobs:

  # This must work as no environment is provided and vars/secrets exist when inherit is enabled
  testinheritance_noenv:
    steps:
      - name: Print testvar in component (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testvar: ${{ vars.testvar }}"
      - name: Print testsec in component (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testsec: ${{ secrets.testsec }}"
  
  # This must work environment exists and vars/secrets exist when inherit is enabled
  testinheritance_env_hardcoded:
    environment: environment_mlcb_test_param
    steps:
      - name: Print testvar in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testvar: ${{ vars.testvar }}"
      - name: Print testsec in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testsec: ${{ secrets.testsec }}"

  # This should fail as the environment does not exist
  # testinheritance_env_hardcoded_wrong:
  #   environment: environment_mlcb_test_WRONG
  #   steps:
  #     - name: Print testvar in environment (inherited)
  #       uses: docker://golang:1.20.3-alpine3.17
  #       shell: sh
  #       run: |
  #         echo "testvar: ${{ vars.testvar }}"
  #     - name: Print testsec in environment (inherited)
  #       uses: docker://golang:1.20.3-alpine3.17
  #       shell: sh
  #       run: |
  #         echo "testsec: ${{ secrets.testsec }}"

  # This should fail if the environment passed as param does not exist, but work if environment is environment_mlcb_test_param
  testinheritance_env_param:
    environment: ${{ inputs.targetenv }}
    steps:
      - name: Print testvar in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testvar: ${{ vars.testvar }}"
      - name: Print testsec in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testsec: ${{ secrets.testsec }}"

  # This fails (orange banner) as the environment is null, but the problem is that the orange banner is cleared if another wf runs successfully
  # testinheritance_env_null:
  #   environment: null
  #   steps:
  #     - name: Print testvar in environment (inherited)
  #       uses: docker://golang:1.20.3-alpine3.17
  #       shell: sh
  #       run: |
  #         echo "testvar: ${{ vars.testvar }}"
  #     - name: Print testsec in environment (inherited)
  #       uses: docker://golang:1.20.3-alpine3.17
  #       shell: sh
  #       run: |
  #         echo "testsec: ${{ secrets.testsec }}"

  # This must work as environment is provided and vars/secrets exist when inherit is enabled
  testinheritance_env_hardcoded_inexp:
    environment: ${{ 'environment_mlcb_test_param' }}
    steps:
      - name: Print testvar in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testvar: ${{ vars.testvar }}"
      - name: Print testsec in environment (inherited)
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          echo "testsec: ${{ secrets.testsec }}"
